<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="9" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-01-20T17:57:39 GMT" name="Command line suite" finished-at="2021-01-20T18:02:22 GMT" duration-ms="282603">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestNGRunner@4d9e68d0]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-01-20T17:57:39 GMT" name="Command line test" finished-at="2021-01-20T18:02:22 GMT" duration-ms="282603">
      <class name="runner.TestNGRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:runner.TestNGRunner@4d9e68d0]" started-at="2021-01-20T17:57:39 GMT" name="setUpClass" finished-at="2021-01-20T17:57:40 GMT" duration-ms="818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestNGRunner@4d9e68d0]" started-at="2021-01-20T17:57:40 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-01-20T17:58:10 GMT" duration-ms="30177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Sanity check for the listed webpages"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Scan & Validate a given website for no console errors, response code & broken links by crawl over all the web pages of the site]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestNGRunner@4d9e68d0]" started-at="2021-01-20T17:58:10 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-01-20T17:58:55 GMT" duration-ms="44910" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Sanity check for the listed webpages"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Scan & Validate a given website for no console errors, response code & broken links by crawl over all the web pages of the site]"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Tried to run command without establishing a connection
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CHNMCT279631L', ip: '10.110.70.213', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.7'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 84.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20210105180113, moz:geckodriverVersion: 0.29.0, moz:headless: false, moz:processID: 10944, moz:profile: C:\Users\ronald_p\AppData\L..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 927890f9-4911-4054-b04c-1bdad3ed9045]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Tried to run command without establishing a connection
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CHNMCT279631L', ip: '10.110.70.213', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.7'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 84.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20210105180113, moz:geckodriverVersion: 0.29.0, moz:headless: false, moz:processID: 10944, moz:profile: C:\Users\ronald_p\AppData\L..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 927890f9-4911-4054-b04c-1bdad3ed9045
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:452)
at stepDefinitions.StepDefs.the_current_browser_should_be_closed(StepDefs.java:190)
at âœ½.the current browser should be closed(file:///D:/MyWorkspace/HandsOn/assessment-test/src/test/resources/features/crawlAwebpage.feature:39)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestNGRunner@4d9e68d0]" started-at="2021-01-20T17:58:55 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-01-20T17:59:22 GMT" duration-ms="26590" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Sanity check for the listed webpages"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Scan & Validate a given website for no console errors, response code & broken links by crawl over all the web pages of the site]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestNGRunner@4d9e68d0]" started-at="2021-01-20T17:59:22 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-01-20T17:59:42 GMT" duration-ms="20466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation for no console errors on page loads"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Scan & Validate a given website for no console errors, response code & broken links by crawl over all the web pages of the site]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestNGRunner@4d9e68d0]" started-at="2021-01-20T17:59:42 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-01-20T18:00:05 GMT" duration-ms="22758" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation for no console errors on page loads"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Scan & Validate a given website for no console errors, response code & broken links by crawl over all the web pages of the site]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestNGRunner@4d9e68d0]" started-at="2021-01-20T18:00:05 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-01-20T18:00:38 GMT" duration-ms="33570" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation for no console errors on page loads"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Scan & Validate a given website for no console errors, response code & broken links by crawl over all the web pages of the site]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Verify console errors on page loads. expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Verify console errors on page loads. expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at stepDefinitions.StepDefs.i_validate_for_no_console_errors(StepDefs.java:171)
at âœ½.I validate for no console errors for the url-"https://www.kraken.com/doesntexist"(file:///D:/MyWorkspace/HandsOn/assessment-test/src/test/resources/features/crawlAwebpage.feature:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestNGRunner@4d9e68d0]" started-at="2021-01-20T18:00:38 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-01-20T18:01:29 GMT" duration-ms="50737" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation for no console errors on page loads"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Scan & Validate a given website for no console errors, response code & broken links by crawl over all the web pages of the site]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestNGRunner@4d9e68d0]" started-at="2021-01-20T18:01:29 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-01-20T18:02:21 GMT" duration-ms="52329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Scan for all links on the page go to another live (non 4xx) page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Scan & Validate a given website for no console errors, response code & broken links by crawl over all the web pages of the site]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.TestNGRunner@4d9e68d0]" started-at="2021-01-20T18:02:21 GMT" name="tearDownClass" finished-at="2021-01-20T18:02:22 GMT" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.TestNGRunner -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
